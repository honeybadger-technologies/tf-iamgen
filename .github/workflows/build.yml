name: Build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: darwin
            arch: arm64  # Will be included in darwin builds separately
          - os: windows
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
        cache: true
    
    - name: Download dependencies
      run: go mod download
    
    - name: Get version from tag
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION="${GITHUB_REF#refs/tags/}"
        else
          VERSION="dev-$(git rev-parse --short HEAD)"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        OUTPUT_NAME="tf-iamgen"
        if [ "${{ matrix.os }}" = "windows" ]; then
          OUTPUT_NAME="${OUTPUT_NAME}.exe"
        fi
        
        go build \
          -v \
          -ldflags="-X 'main.Version=${{ steps.version.outputs.VERSION }}' \
                    -X 'main.BuildTime=$(date -u '+%Y-%m-%dT%H:%M:%SZ')' \
                    -X 'main.GitCommit=$(git rev-parse HEAD)'" \
          -o "build/bin/${OUTPUT_NAME}" \
          .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: tf-iamgen-${{ matrix.os }}-${{ matrix.arch }}
        path: build/bin/
        if-no-files-found: error
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/bin/*
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Docker Image
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Get version from tag
      id: version
      run: |
        VERSION="${GITHUB_REF#refs/tags/}"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: honeybadger/tf-iamgen:${{ steps.version.outputs.VERSION }}
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          BUILD_TIME=$(date -u '+%Y-%m-%dT%H:%M:%SZ')
          GIT_COMMIT=$(git rev-parse HEAD)
      continue-on-error: true
